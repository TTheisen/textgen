sudo apt-get update
sudo apt-get install default-jdk
java -version
sudo apt-get install scala
sudo apt-get install git
sudo mkdir /usr/local/spark
download spark-2.4.0-bin-hadoop2.7.tgz
sudo tar xvf Downloads/spark-2.4.0-bin-hadoop2.7.tgz -C /usr/local/spark
sudo nano ~/.bashrc
	SPARK_HOME=/usr/local/spark
	export PATH=$SPARK_HOME/bin:$PATHs
	source /etc/environment
	export PATH=$PATH:$JAVA_HOME/bin
source ~/.bashrc
sudo apt install python
download zookeeper-3.4.9.tar.gz
sudo mkdir /usr/local/zookeeper
sudo mv Downloads/zookeeper-3.4.9.tar.gz /usr/local/zookeeper
sudo tar -zxf /usr/local/zookeeper/zookeeper-3.4.9.tar.gz
sudo mkdir /usr/local/zookeeper/data
sudo nano conf/zoo.cfg
	tickTime=2000
	dataDir=/path_to_your_working_directory/zookeeper-3.4.9/data
	clientPort=2181
	initLimit=5
	syncLimit=2
download kafka_2.12-2.1.1.tgz
sudo mkdir /usr/local/kafka
sudo mv Downloads/kafka_2.12-2.1.1.tgz /usr/local/kafka
sudo tar -zxf /usr/local/kafka/kafka_2.12-2.1.1.tgz
sudo gedit /etc/environment
	JAVA_HOME="/usr/lib/jvm/java-1.11.0-openjdk-amd64"
$bin/zookeeper-server-start.sh config/zookeeper.properties (starts zookeeper)
$bin/kafka-server-start.sh config/server.properties (starts broker)
$bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test-topic (create topic)
$bin/kafka-topics.sh --list --zookeeper localhost:2181 (confirm topic is created)

Terminal 1:
$bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test-topic (produce messages)
	
Terminal 2: 
bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning (consume messages) 
cd 
Run Pyspark Program:
$bin/spark-submit /home/dev-tom/Documents/Programs/<file>.py localhost:2181 <topic>

MongoDB:
sudo apt update
sudo apt install -y mongodb
sudo systemctl status mongodb (check status)
sudo systemctl start mongodb (start service) (Needed before using pymongo)
sudo systemctl stop mongodb (stop service)

Postgres:




	


